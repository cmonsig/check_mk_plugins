#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

cisco_fan_states = ('', 'unknown', 'up', 'down', 'warning')

def inventory_cisco_fantray(info):
    if info and info[0]:
        #Some Cisco switches reporting not available fans as down,
        #so we cant invenorize fans reported as down
        return [ (line[0], None) for line in info if line[1] != '3' ]

def check_cisco_fantray(item, params, info):
    for line in info:
        if line[0] == item:
            state = saveint(line[1])
            status = [ "", "unknown", "up", "down", "warning" ]
            if state == 2:
                return (0, "State is %s (%d)" % (status[state], state))
            elif state in ( 0, 1, 4 ):
                return (1, "State is %s (%d)" % (status[state], state))
            else:
                return (2, "State is %s (%d)" % (status[state], state))
    return (3, "item not found in snmp data")


check_info["cisco_fantray"] = {
    'check_function':          check_cisco_fantray,
    'inventory_function':      inventory_cisco_fantray,
    'service_description':     'FAN %s',
    'snmp_info':               ('.1.3.6.1.4.1.9.9.117.1.4.1.1.1',[ OID_END, '' ]),
    'snmp_scan_function':      \
     lambda oid: "cisco" in oid(".1.3.6.1.2.1.1.1.0").lower(),
}

#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_dell_om_sensors(info):
    return [ (x[0], None) for x in info ]

def check_dell_om_sensors(item, _no_params, info):
    #Probetypes found in check_openmanage3.pl
    probe_types = {
         1  : 'Other',      # type is other than following values
         2  : 'Unknown',    # type is unknown
         3  : 'AmbientESM', # type is Ambient Embedded Systems Management temperature probe
         16 : 'Discrete',   # type is temperature probe with discrete reading
    }
    for line in info:
        if line[0] == item:
            reading = int(line[2]) / 10.0
            msg = "Current: %.2fC Sensor: %s (Type: %s) " % \
            ( reading, line[4], probe_types[int(line[3])] )
            perf = [ ('temp', reading )]
            if int(line[1]) != 3:
                return 2, msg, perf
            return 0, msg, perf

    return 3, "probe not found in SNMP tree"

check_info["dell_om_sensors"] = {
    "check_function"        : check_dell_om_sensors,
    "inventory_function"    : inventory_dell_om_sensors,
    "service_description"   : "Sensor %s",
    "has_perfdata"          : True,
    # There is no other way to find out that openmanage is present.
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.4.1.674.10893.1.20.1.0'),
    "snmp_info"             : ( ".1.3.6.1.4.1.674.10892.1.700.20.1", [
                                        '2', #ProbeIndex
                                        '5', #ProbeStatus
                                        '6', #ProbeReading
                                        '7', #ProbeType
                                        '8', #ProbeLocationName
                                        #'10.1', #ProbeUpperCriticalThreshold',
                                        #'11.1', #ProbeUpperNonCriticalThreshold',
                                        #'12.1', #ProbeLowerNonCriticalThreshold',
                                        #'13.1', #ProbeLowerCriticalThreshold',
                                        #'16.1', #ProbeDiscreteReading',
                              ]),
}

